{"ast":null,"code":"var _jsxFileName = \"/Users/sagar/Desktop/react-app-1/src/components/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { LocationSearch } from \"./LocationSearch\";\nimport { LocationTable } from \"./LocationTable\";\nimport { searchLocation } from \"../services/WeatherService\";\nimport { WeatherSummary } from \"./WeatherSummary\";\nimport { ErrorAlert, WarningAlert } from \"./Alerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [locations, setLocations] = useState([]);\n  const [error, setError] = useState('');\n  const [warning, setWarning] = useState('');\n  const [currentLocation, setCurrentLocation] = useState(null);\n\n  const resetAlerts = () => {\n    setError('');\n    setWarning('');\n  };\n\n  let addLocation = async term => {\n    resetAlerts();\n    const location = await searchLocation(term);\n\n    if (!location) {\n      setError(`No location found called '${term}'`);\n    } else if (locations.find(item => item.id === location.id)) {\n      setWarning(`Location '${term}' is already in the list.`);\n    } else {\n      setLocations([location, ...locations]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationSearch, {\n      onSearch: addLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WarningAlert, {\n      message: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationTable, {\n      locations: locations,\n      current: currentLocation,\n      onSelect: location => setCurrentLocation(location)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherSummary, {\n      location: currentLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3PySndk3fpRvpLhnQ1xUPcIAR+I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sagar/Desktop/react-app-1/src/components/App.tsx"],"names":["React","useState","LocationSearch","LocationTable","searchLocation","WeatherSummary","ErrorAlert","WarningAlert","App","locations","setLocations","error","setError","warning","setWarning","currentLocation","setCurrentLocation","resetAlerts","addLocation","term","location","find","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,UAAvC;;;AAEA,MAAMC,GAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAoB,EAApB,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAyB,IAAzB,CAAtD;;AAEA,QAAMgB,WAAW,GAAG,MAAM;AACxBL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,MAAII,WAAW,GAAG,MAAOC,IAAP,IAAwB;AACxCF,IAAAA,WAAW;AACX,UAAMG,QAAQ,GAAG,MAAMhB,cAAc,CAACe,IAAD,CAArC;;AAEA,QAAI,CAACC,QAAL,EAAe;AACbR,MAAAA,QAAQ,CAAE,6BAA4BO,IAAK,GAAnC,CAAR;AACD,KAFD,MAEO,IAAIV,SAAS,CAACY,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYH,QAAQ,CAACG,EAA5C,CAAJ,EAAqD;AAC1DT,MAAAA,UAAU,CAAE,aAAYK,IAAK,2BAAnB,CAAV;AACD,KAFM,MAEA;AACLT,MAAAA,YAAY,CAAC,CAACU,QAAD,EAAW,GAAGX,SAAd,CAAD,CAAZ;AACD;AACF,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAES;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEJ,SAA1B;AACe,MAAA,OAAO,EAAEM,eADxB;AAEe,MAAA,QAAQ,EAAEK,QAAQ,IAAIJ,kBAAkB,CAACI,QAAD;AAFvD;AAAA;AAAA;AAAA;AAAA,YANF,eAUE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtCD;;GAAMP,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, {FC, useState} from 'react';\nimport './App.css';\nimport {LocationSearch} from \"./LocationSearch\";\nimport {LocationTable} from \"./LocationTable\";\nimport {WeatherLocation} from \"../model/Weather\";\nimport {searchLocation} from \"../services/WeatherService\";\nimport {WeatherSummary} from \"./WeatherSummary\";\nimport {ErrorAlert, WarningAlert} from \"./Alerts\";\n\nconst App: FC = () => {\n  const [locations, setLocations] = useState<WeatherLocation[]>([]);\n  const [error, setError] = useState('');\n  const [warning, setWarning] = useState('');\n  const [currentLocation, setCurrentLocation] = useState<WeatherLocation | null>(null);\n\n  const resetAlerts = () => {\n    setError('');\n    setWarning('');\n  }\n\n  let addLocation = async (term: string) => {\n    resetAlerts();\n    const location = await searchLocation(term);\n\n    if (!location) {\n      setError(`No location found called '${term}'`);\n    } else if (locations.find(item => item.id === location.id)) {\n      setWarning(`Location '${term}' is already in the list.`);\n    } else {\n      setLocations([location, ...locations]);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Weather App</h1>\n\n      <LocationSearch onSearch={addLocation}/>\n      <ErrorAlert message={error}/>\n      <WarningAlert message={warning}/>\n      <LocationTable locations={locations}\n                     current={currentLocation}\n                     onSelect={location => setCurrentLocation(location)}/>\n\n      <WeatherSummary location={currentLocation}/>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/sagar/Desktop/react-app-1/src/components/WeatherSummary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { WeatherEntry } from \"./WeatherEntry\";\nimport { readForecast, readWeather } from \"../services/WeatherService\";\nimport './WeatherSummary.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherSummary = ({\n  location\n}) => {\n  _s();\n\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    (async function () {\n      if (location) {\n        const [weather, forecast] = await Promise.all([readWeather(location.id), readForecast(location.id)]);\n        setWeather(weather);\n        setForecast(forecast);\n      }\n    })();\n  }, [location]);\n  if (!location || !weather || !forecast) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: location.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherEntry, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          whiteSpace: 'nowrap'\n        },\n        children: forecast.map(timePoint => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(WeatherEntry, {\n            weather: timePoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, timePoint.dt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherSummary, \"RArEwUCc0CjWSqlIJI5zrFoGdZI=\");\n\n_c = WeatherSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherSummary\");","map":{"version":3,"sources":["/Users/sagar/Desktop/react-app-1/src/components/WeatherSummary.tsx"],"names":["React","useEffect","useState","WeatherEntry","readForecast","readWeather","WeatherSummary","location","weather","setWeather","forecast","setForecast","Promise","all","id","name","whiteSpace","map","timePoint","dt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,SAAQC,YAAR,EAAsBC,WAAtB,QAAwC,4BAAxC;AACA,OAAO,uBAAP;;AAMA,OAAO,MAAMC,cAAuC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACrE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAiB,IAAjB,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAmB,IAAnB,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,kBAAkB;AACjB,UAAIM,QAAJ,EAAc;AACZ,cAAM,CAACC,OAAD,EAAUE,QAAV,IAAsB,MAAME,OAAO,CAACC,GAAR,CAAY,CAC5CR,WAAW,CAACE,QAAQ,CAACO,EAAV,CADiC,EAE5CV,YAAY,CAACG,QAAQ,CAACO,EAAV,CAFgC,CAAZ,CAAlC;AAIAL,QAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,QAAAA,WAAW,CAACD,QAAD,CAAX;AACD;AACF,KATD;AAUD,GAXQ,EAWN,CAACH,QAAD,CAXM,CAAT;AAaA,MAAI,CAACA,QAAD,IAAa,CAACC,OAAd,IAAyB,CAACE,QAA9B,EAAwC,OAAO,IAAP;AAExC,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKH,QAAQ,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEP;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,6BACE;AAAI,QAAA,KAAK,EAAG;AAACQ,UAAAA,UAAU,EAAE;AAAb,SAAZ;AAAA,kBACGN,QAAQ,CAACO,GAAT,CAAaC,SAAS,iBACrB;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF,WAASA,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCM;;GAAMb,c;;KAAAA,c","sourcesContent":["import React, {FC, useEffect, useState} from \"react\";\nimport {WeatherEntry} from \"./WeatherEntry\";\nimport {Weather, WeatherLocation} from \"../model/Weather\";\nimport {readForecast, readWeather} from \"../services/WeatherService\";\nimport './WeatherSummary.scss';\n\ninterface WeatherSummaryProps {\n  location: WeatherLocation | null;\n}\n\nexport const WeatherSummary: FC<WeatherSummaryProps> = ({location}) => {\n  const [weather, setWeather] = useState<Weather | null>(null);\n  const [forecast, setForecast] = useState<Weather[] | null>(null);\n\n  useEffect(() => {\n    (async function () {\n      if (location) {\n        const [weather, forecast] = await Promise.all([\n          readWeather(location.id),\n          readForecast(location.id)\n        ]);\n        setWeather(weather);\n        setForecast(forecast);\n      }\n    })()\n  }, [location]);\n\n  if (!location || !weather || !forecast) return null;\n\n  return (\n    <div>\n      <hr/>\n      <h2>{location.name}</h2>\n      <WeatherEntry weather={weather}/>\n\n      <h2>Forecast</h2>\n      <div>\n        <ol style={({whiteSpace: 'nowrap'})}>\n          {forecast.map(timePoint =>\n            <li key={timePoint.dt}>\n              <WeatherEntry weather={timePoint}/>\n            </li>\n          )}\n        </ol>\n      </div>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}